import { NextRequest, NextResponse } from 'next/server'
import { performSEOAnalysis } from '@/lib/seoUtils'
import { generateAdvancedTags } from '@/lib/tagUtils'

export async function POST(request: NextRequest) {
  try {
    const { 
      title, 
      content, 
      author = 'JUNYA ISHIHARA',
      publishedAt = new Date().toISOString(),
      imageUrl,
      existingTags = [],
      existingPosts = []
    } = await request.json()

    if (!title || !content) {
      return NextResponse.json(
        { error: 'Title and content are required' },
        { status: 400 }
      )
    }

    // まずタグを自動生成
    const tagAnalysis = generateAdvancedTags(content, title, 0.2)
    const autoTags = tagAnalysis.map(analysis => analysis.tag)
    
    // 既存タグと自動生成タグを組み合わせ
    const allTags = [...new Set([...existingTags, ...autoTags])]

    // SEO分析を実行
    const seoAnalysis = performSEOAnalysis(
      title,
      content,
      allTags,
      author,
      publishedAt,
      imageUrl,
      existingPosts
    )

    // 追加のSEO提案を生成
    const additionalSuggestions = generateAdditionalSEOSuggestions(content, title, allTags)

    return NextResponse.json({
      ...seoAnalysis,
      autoGeneratedTags: autoTags,
      allTags,
      suggestions: [...seoAnalysis.suggestions, ...additionalSuggestions],
      analysis: {
        contentAnalysis: {
          wordCount: content.length,
          paragraphCount: content.split('\n\n').length,
          headingCount: (content.match(/#{1,6}\s/g) || []).length,
          listCount: (content.match(/^[\*\-\+]\s/gm) || []).length
        },
        keywordAnalysis: {
          primaryKeywords: seoAnalysis.keywords.slice(0, 3),
          secondaryKeywords: seoAnalysis.keywords.slice(3, 6),
          longTailKeywords: seoAnalysis.keywords.slice(6)
        },
        competitorAnalysis: generateCompetitorInsights(allTags)
      }
    })
  } catch (error) {
    console.error('Error performing SEO analysis:', error)
    return NextResponse.json(
      { error: 'Failed to perform SEO analysis' },
      { status: 500 }
    )
  }
}

// 追加SEO提案生成
function generateAdditionalSEOSuggestions(content: string, title: string, tags: string[]): string[] {
  const suggestions: string[] = []

  // 画像最適化
  if (!content.includes('![') && !content.includes('<img')) {
    suggestions.push('📸 画像を追加してコンテンツを視覚的に豊かにしましょう')
  }

  // FAQ構造
  if (!content.includes('?') && !content.includes('？')) {
    suggestions.push('❓ FAQ形式の質問を追加すると検索に引っかかりやすくなります')
  }

  // 数値データ
  if ((content.match(/\d+/g) || []).length < 3) {
    suggestions.push('📊 具体的な数値データを含めると信頼性が向上します')
  }

  // 引用・参考文献
  if (!content.includes('参考') && !content.includes('引用') && !content.includes('出典')) {
    suggestions.push('📚 信頼できる情報源への参照を追加しましょう')
  }

  // コール・トゥ・アクション
  if (!content.includes('お問い合わせ') && !content.includes('体験') && !content.includes('相談')) {
    suggestions.push('🎯 記事の最後にコール・トゥ・アクション（行動喚起）を追加しましょう')
  }

  // ローカルSEO（パーソナルトレーニング特化）
  if (!content.includes('東京') && !content.includes('地域') && !content.includes('近く')) {
    suggestions.push('📍 地域に関連するキーワードを含めてローカルSEOを強化しましょう')
  }

  return suggestions
}

// 競合分析インサイト
function generateCompetitorInsights(tags: string[]): any {
  const insights = {
    fitnessMarket: {
      competition: 'HIGH',
      opportunity: [],
      trends: []
    },
    recommendedKeywords: [],
    contentGaps: []
  }

  // タグに基づく市場分析
  if (tags.includes('初心者向け')) {
    insights.fitnessMarket.opportunity.push('初心者向けコンテンツは需要が高い')
    insights.recommendedKeywords.push('筋トレ 初心者', 'フィットネス 始め方')
  }

  if (tags.includes('ホームトレーニング')) {
    insights.fitnessMarket.trends.push('ホームフィットネス市場は成長中')
    insights.recommendedKeywords.push('自宅 筋トレ', '器具なし トレーニング')
  }

  if (tags.includes('女性向け')) {
    insights.fitnessMarket.opportunity.push('女性向けフィットネス市場は拡大中')
    insights.recommendedKeywords.push('女性 筋トレ', 'ダイエット 女性')
  }

  // コンテンツギャップ分析
  if (!tags.includes('栄養')) {
    insights.contentGaps.push('栄養関連の情報を追加すると包括的になります')
  }

  if (!tags.includes('怪我予防')) {
    insights.contentGaps.push('安全性・怪我予防の情報があると信頼性が向上します')
  }

  return insights
}